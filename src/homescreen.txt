import React, { useState, useEffect } from 'react';
import apiInstance from '../../utils/axios';
import { Link } from 'react-router-dom';
import GetCurrentAddress from '../plugin/UserCountry';
import UserData from '../plugin/UserData';
import CardID from '../plugin/CardID';
import Swal from 'sweetalert2'
import ImageSearch from './ImageSearch';

const Toast = Swal.mixin({
  toast: true,
  position:"top",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
})

function Products() {
  const [products, setProducts] = useState([]);
  const [category, setCategory] = useState([]);

  const[colorValue, setColorValue] = useState("No Color")
  const [sizeValue, setSizeValue] = useState("No Size")
  const [qtyValue, setQtyValue] = useState(1)

  const [selectedProduct, setSelectedProduct] = useState(null)

  const [selectedColors, setSelectedColors] = useState({})
  const [selectedSize, setSelectedSize] = useState({})

  const currentAddress = GetCurrentAddress()
  const userData = UserData()
  const cart_id = CardID()

  const handleColorButtonClick = (event, product_id, colorName) => {
    setColorValue(colorName)
    setSelectedProduct(product_id)

    setSelectedColors((prevSelectedColors) => ({
      ...prevSelectedColors,
      [product_id]: colorName
    }))
  }

  const handleSizeButtonClick = (event, product_id, sizeName) => {
    setSizeValue(sizeName)
    setSelectedProduct(product_id)

    setSelectedSize((prevSelectedSize) => ({
      ...prevSelectedSize,
      [product_id]: sizeName
    } ))
  }

  const handleQtyChange = (event, product_id) => {
    setQtyValue(event.target.value)
    setSelectedProduct(product_id)
  }

  useEffect(() => {
    apiInstance.get("products/")
      .then((response) => {
        setProducts(response.data);
        console.log(response.data);
      });
  }, []);

  useEffect(() => {
    apiInstance.get("category/")
      .then((response) => {
        setCategory(response.data);
        console.log(response.data);
      });
  }, []);

const handleAddToCart = async (product_id, price, shipping_amount) => {

  const formData = new FormData()

  formData.append("product_id", product_id)
  formData.append("user_id", userData?.user_id)
  formData.append("qty", qtyValue)
  formData.append("price", price)
  formData.append("shipping_amount", shipping_amount)
  formData.append("country", currentAddress.country)
  formData.append("size", sizeValue)
  formData.append("color", colorValue)
  formData.append("cart_id", cart_id)

  const response = await apiInstance.post(`cart-view/`, formData)
  Toast.fire({
    icon: 'success',
    title: response.data.message
  })
}

const addToWishList = async (productId, userId) => {
   try {
    const formdata = new FormData()
    formdata.append('product_id', productId)
    formdata.append('user_id', userId)

    const response = await apiInstance.post(`customer/wishlist/${userId}/`, formdata)
    console.log(response.data)

    Swal.fire({
      icon: 'success',
      title: response.data.message,
    })
   } catch (error) {
    console.log(error)
   }
}
  return (
    <>
      <main className="mt-5">
        <div className="container">
       
          <section className="text-center">
            <div className="row">
              {products?.map((p, index) => (
                <div className="col-lg-4 col-md-12 mb-4" style={{}} key={index}>
                  <div className="card" style={{}}>
                    <div className="bg-image hover-zoom ripple" data-mdb-ripple-color="light">
                    <Link to={`/detail/${p.slug}`}>
                    <img
                        src={p.image}
                        className="w-100"
                        style={{ width: "", height: "70vh", objectFit: "cover" }}
                        alt={p.title}
                      /></Link>
                      <a href="#!">
                        <div className="mask">
                          <div className="d-flex justify-content-start align-items-end h-100">
                            <h5>
                              <span className="badge badge-primary ms-2">New</span>
                            </h5>
                          </div>
                        </div>
                        <div className="hover-overlay">
                          <div className="mask" style={{ backgroundColor: "rgba(251, 251, 251, 0.15)" }} />
                        </div>
                      </a>
                    </div>
                    <div className="card-body">
                    <Link to={`/detail/${p.slug}`}>
                        <h5 className="card-title mb-3">{p.title}</h5>
                    </Link>
                      <a href="#!" className="text-reset">
                        <p>{p.category?.title}</p>
                      </a>
                      <div className="d-flex justify-content-center">
                        <h6 className="mb-3">{p.price}frs</h6>
                        <h6 className="mb-3 text-muted"><strike>{p.old_price}</strike></h6>
                      </div>
                      <div className="btn-group">
                        <button
                          className="btn btn-primary dropdown-toggle"
                          type="button"
                          id="dropdownMenuClickable"
                          data-bs-toggle="dropdown"
                          data-bs-auto-close="false"
                          aria-expanded="false"
                        >
                          Variation
                        </button>
                        <ul className="dropdown-menu" aria-labelledby="dropdownMenuClickable">
                        <div className="d-flex flex-column">
                            <li className="p-1">
                              <b>Quantit√©</b>:
                            </li>
                            <div className="p-1 mt-0 pt-0 d-flex flex-wrap">
                           
                                <li> 
                                   <input className='form-control' value={qtyValue} onChange={(e) => handleQtyChange(e, p.id)} type='number' />
                                </li>
                            </div>
                          </div>
                          {p.size?.length > 0 &&
                             <div className="d-flex flex-column">
                             <li className="p-1">
                               <b>Size</b>: {selectedSize[p.id] || 'Pas de taille'}
                             </li>
                             <div className="p-1 mt-0 pt-0 d-flex flex-wrap">
                               {p.size?.map((size, index) => (
                                 <li>
                                 <button onClick={(e) => handleSizeButtonClick(e, p.id, size.name)} className="btn btn-secondary btn-sm me-2 mb-1">
                                  {size.name}
                                  </button>
                               </li>
                               ))}
                               
                             </div>
                           </div>
                          }
                          {p.color?.length > 0 &&
                          <div className="d-flex flex-column mt-3">
                            <li className="p-1">
                              <b>Color</b>: {selectedColors[p.id] || "Pas de Couleur"}
                            </li>
                            <div className="p-1 mt-0 pt-0 d-flex flex-wrap">
                            {p?.color?.map((color, index) =>(
                               <li>
                               <button 
                               className="btn btn-sm me-2 mb-1 p-3" 
                               style={{ backgroundColor: `${color.color_code}`}}
                               onClick={(e) => handleColorButtonClick(e, p.id, color.name) }  />
                             </li>
                            ))}
                             
                            </div>
                          </div>}
                          <div className="d-flex mt-3 p-1">
                            <button 
                            type="button" 
                            className="btn btn-primary me-1 mb-1"
                            onClick={() => handleAddToCart(p.id, p.price, p.shipping_amount)}
                            >
                              <i className="fas fa-shopping-cart" />
                            </button>
                            <button type="button" 
                            className="btn btn-danger px-3 me-1 mb-1 ms-2"
                            onClick={() => addToWishList(p.id, userData?.user_id)}
                            >
                              <i className="fas fa-heart" />
                            </button>
                          </div>
                        </ul>
                        <button type="button"
                         className="btn btn-danger px-3 me-1 ms-2"
                         onClick={() => addToWishList(p.id, userData?.user_id)}
                         >
                          <i className="fas fa-heart" />
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
              <div className="row">
                {category?.map((c, index) => (
                  <div className="col-lg-2" key={index}>
                    <img
                      src={c.image}
                      style={{ width: "100px", height: "100px", borderRadius: "50%", objectFit: "cover" }}
                      alt="Category"
                    />
                    <h6>{c.title}</h6>
                  </div>
                ))}
              </div>
            </div>
          </section>
        </div>
      </main>
    </>
  );
}

export default Products;
